the handleUncaughtErroResponse is not linked to the user responses interface. May need to create handlers for each user/auth etc.

update express 5

use express-validator isMongoID() instead of custom

eslint showing errors in the Request<any, any, Interface>. Deleted them. Are these types required?

codes starting from 1st /auth folder 1****
streams 2****
etc.

is user/get-one-by-id used?

} catch {
	return next(error) ????
}

set eventemitter types


shouldnt return an actual error. Should return generic error and log the error
use the handleUncaughtErroResponse()

make sure the protected routes unit tests with middleware and env vars is safe

email-available, username-available - think about if a limit should be set. These would be used either not at all, since creating a user would do this.

updateOne() make the 2nd argument just the value, then use the $set in the updateOne

make sure if no document is found in the DB to think about returning the same responses, 404.

responses.success(undefined, "Account is already verified") should be an easier way to not send undefined.

login, line ~86, why am i fetching the user again?


inserting journals from front-end wasn't upserting, and was instead modifying. look into this. because of thisthere's no _id. look into this.


replace with ObjectId.createFromHexString(userId)?

the username and email available responses. should return undefined if an error?


// Think if this should occur, or user_not_found then could_not_update
if (!updateResult.matchedCount || !updateResult.modifiedCount) {
	return res
	.status(statusCodes.could_not_update)
	.json(userResponses.could_not_update());
}

possible to set A MongoDB schema, using validator?